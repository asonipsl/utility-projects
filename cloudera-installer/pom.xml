<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.gc</groupId>
  <artifactId>cloudera-installer</artifactId>
  <packaging>jar</packaging>
  <name>cloudera-installer</name>
  <version>1.0</version>

  <build>
    <finalName>cloudera-installer</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-package-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>ml-diagnostics</includeArtifactIds>
              <outputDirectory>${project.build.directory}/classes/diagnostics</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
		  <execution>
            <id>copy-bin-installer-dependencies</id>
            <phase>install</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>ml-diagnostics</includeArtifactIds>
              <outputDirectory>${project.build.directory}/bin-installer/diagnostics</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-jar</id>
            <phase>install</phase>
            <configuration>
              <tasks>
                <copy todir="${project.build.directory}/bin-installer/scripts/">
                	<fileset dir="${project.build.directory}/classes/scripts/"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- For this dependency resolution, execute mvn install on ml-diagnostic project before executing this build -->
    <!-- This would make this dependency available in local maven repo -->
    <dependency>
      <groupId>com.gc</groupId>
      <artifactId>ml-diagnostics</artifactId>
      <version>1.0</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <build>
        <plugins>
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>rpm-maven-plugin</artifactId>
		        <version>2.1-alpha-4</version>
		        <extensions>true</extensions>
		        <executions>
		          <execution>
		            <id>generate-rpm</id>
		            <goals>
		              <goal>rpm</goal>
		            </goals>
		          </execution>
		        </executions>
		        <configuration>
		          <name>cloudera-installer</name>
		          <projversion>${project.version}</projversion>
		          <release>${release.version}</release>
		          <needarch>x86_64</needarch>
		          <defaultFilemode>755</defaultFilemode>
		          <defaultDirmode>755</defaultDirmode>
		          <group>root</group>
		          <mappings>
		            <mapping>
		              <directory>${rpm.install.dir}scripts</directory>
		              <directoryIncluded>false</directoryIncluded>
		              <filemode>755</filemode>
		              <sources>
		                <source>
		                  <location>${project.build.directory}/classes/scripts/</location>
		                </source>
		              </sources>
		            </mapping>
		            <mapping>
		              <directory>${rpm.install.dir}diagnostics</directory>
		              <directoryIncluded>false</directoryIncluded>
		              <filemode>755</filemode>
		              <sources>
		                <source>
		                  <location>${project.build.directory}/classes/diagnostics/</location>
		                </source>
		              </sources>
		            </mapping>
		          </mappings>
		          <prepareScriptlet>
		            <script>echo "Preparation in progress"</script>
		          </prepareScriptlet>
		          <preinstallScriptlet>
		            <script>
		              CONFIG_PROP_FILE=${cloudera.config.file}
		              CONFIG_EXIST=2
		              RE='^[0-9]+$'

		              # Check if file exists
		              if [ -f $CONFIG_PROP_FILE ]; then

		                # Check if property exist
		                . $CONFIG_PROP_FILE

		                CONFIG_EXIST=0

		                if [ "" = "$cluster_name" ] || [ "" = "$host_count" ] \
		                || [ "" = "$ntp_server_ip" ] || ! [[ $host_count =~ $RE ]] \
		                || [ $host_count -lt 3 ]; then
		                  echo "Error : Missing or Incorrect configuration properties"
		                  CONFIG_EXIST=1
		                else
		                  # validate ntp server
		                  ping -c 1 $ntp_server_ip
		                  status=$?
		                  if [ $status -ne 0 ] ; then
		                    echo "Error : NTP Server not reachable : $ntp_server_ip : $status"
		                    CONFIG_EXIST=1
		                    break
		                  fi
		                  counter=1
		                  while [ $counter -le $host_count ]
		                  do
		                    varHostName="host_name_$counter"
		                    varHostIP="host_ip_$counter"
		                    if [[ "" = "${!varHostName}" || "" = "${!varHostIP}" ]]; then
		                      echo "Error : Missing configuration property : $varHostName /
		                      $varHostIP"
		                      CONFIG_EXIST=1
		                      break
		                    else
		                      ping -c 1 ${!varHostIP}
		                      status=$?
		                      if [ $status -ne 0 ] ; then
		                        echo "Error : IP not reachable : ${!varHostIP} : $status"
		                        CONFIG_EXIST=1
		                        break
		                      fi
		                    fi
		                    ((counter++))
		                  done
		                fi
		              fi

		              # If property file exist check whether to use existing configuration
		              if [ $CONFIG_EXIST -eq 1 ]; then
		                echo "Error : Incorrrect property file format"
		                exit $CONFIG_EXIST
		              elif [ $CONFIG_EXIST -eq 2 ]; then
		                echo "Error : Property file doesn't exist : $CONFIG_PROP_FILE"
		                exit $CONFIG_EXIST
		              fi
		            </script>
		          </preinstallScriptlet>
		          <installScriptlet>
		            <script>echo "Installation in progress"</script>
		          </installScriptlet>
		          <postinstallScriptlet>
		            <script>sh ${rpm.install.dir}scripts/cloudera_install.sh \
		              ${cloudera.config.file} ${killParent}</script>
		          </postinstallScriptlet>
		          <cleanScriptlet>
		            <script>echo "Clean-up in progress"</script>
		          </cleanScriptlet>
		          <keyname>44AF31B6</keyname>
		        </configuration>
		      </plugin>
		      <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>exec-maven-plugin</artifactId>
		        <version>1.2.1</version>
		        <executions>
		           <execution>
		                <id>bin-installer-creater</id>
		                <phase>install</phase>
		                <goals>
		                    <goal>exec</goal>
		                </goals>
		                <configuration>
		                    <executable>sh</executable>
		                    <arguments>
		                    	<argument>${project.build.directory}/bin-installer/scripts/cloudera_bin_creator.sh</argument>
		                        <argument>${project.version}</argument>
		                        <argument>${release.version}</argument>
		                    </arguments>
		                </configuration>
		            </execution>
		        </executions>
		      </plugin>
        </plugins>
      </build>
      <properties>
        <rpm.install.dir>/var/lib/cloudera-installer/</rpm.install.dir>
        <cloudera.config.file>/var/lib/gc-ml/cloudera.conf</cloudera.config.file>
        <project.version>1.0</project.version>
		<release.version>3</release.version>
		<killParent>true</killParent>
      </properties>
    </profile>
  </profiles>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

</project>
